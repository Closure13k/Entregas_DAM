/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Location;
import model.LocationException;

/**
 *
 * @author AaronFM
 */
public class form2 extends javax.swing.JFrame {

    /**
     * Creates new form form2
     */
    public form2() {
        initComponents();
        loadActionCommands();
        loadProvinceCombo();
        loadLocationCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpLocations = new javax.swing.ButtonGroup();
        pnlInformation = new javax.swing.JPanel();
        lblProvince = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        cmbProvince = new javax.swing.JComboBox<>();
        cmbLocation = new javax.swing.JComboBox<>();
        pnlManagement = new javax.swing.JPanel();
        rdBtnDeleteLocation = new javax.swing.JRadioButton();
        rdBtnModifyLocation = new javax.swing.JRadioButton();
        rdBtnNewLocation = new javax.swing.JRadioButton();
        lblLocationSearch = new javax.swing.JLabel();
        txtLocationSearch = new javax.swing.JTextField();
        btnApply = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlInformation.setBorder(javax.swing.BorderFactory.createTitledBorder("Información"));

        lblProvince.setText("Provincia");

        lblLocation.setText("Localidad");

        javax.swing.GroupLayout pnlInformationLayout = new javax.swing.GroupLayout(pnlInformation);
        pnlInformation.setLayout(pnlInformationLayout);
        pnlInformationLayout.setHorizontalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLocation)
                    .addComponent(lblProvince))
                .addGap(18, 18, 18)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbProvince, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbLocation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlInformationLayout.setVerticalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProvince)
                    .addComponent(cmbProvince, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocation)
                    .addComponent(cmbLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pnlManagement.setBorder(javax.swing.BorderFactory.createTitledBorder("Gestión Información"));

        btnGrpLocations.add(rdBtnDeleteLocation);
        rdBtnDeleteLocation.setText("Eliminar localidad seleccionada");

        btnGrpLocations.add(rdBtnModifyLocation);
        rdBtnModifyLocation.setText("Modificar localidad seleccionada");

        btnGrpLocations.add(rdBtnNewLocation);
        rdBtnNewLocation.setSelected(true);
        rdBtnNewLocation.setText("Nueva localidad");

        lblLocationSearch.setText("Localidad");

        btnApply.setText("Ejecutar");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlManagementLayout = new javax.swing.GroupLayout(pnlManagement);
        pnlManagement.setLayout(pnlManagementLayout);
        pnlManagementLayout.setHorizontalGroup(
            pnlManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlManagementLayout.createSequentialGroup()
                        .addComponent(lblLocationSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLocationSearch))
                    .addGroup(pnlManagementLayout.createSequentialGroup()
                        .addGroup(pnlManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdBtnDeleteLocation)
                            .addComponent(rdBtnModifyLocation)
                            .addComponent(rdBtnNewLocation))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addComponent(btnApply, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlManagementLayout.setVerticalGroup(
            pnlManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManagementLayout.createSequentialGroup()
                .addGroup(pnlManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlManagementLayout.createSequentialGroup()
                        .addComponent(rdBtnDeleteLocation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdBtnModifyLocation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdBtnNewLocation))
                    .addComponent(btnApply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pnlManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocationSearch)
                    .addComponent(txtLocationSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlInformation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlManagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlManagement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        try {
            infoMessage(manageLocations());
        } catch (LocationException ex) {
            errorMessage(ex.getMessage());
        }
    }//GEN-LAST:event_btnApplyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new form2().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApply;
    private javax.swing.ButtonGroup btnGrpLocations;
    private javax.swing.JComboBox<Location> cmbLocation;
    private javax.swing.JComboBox<Location> cmbProvince;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblLocationSearch;
    private javax.swing.JLabel lblProvince;
    private javax.swing.JPanel pnlInformation;
    private javax.swing.JPanel pnlManagement;
    private javax.swing.JRadioButton rdBtnDeleteLocation;
    private javax.swing.JRadioButton rdBtnModifyLocation;
    private javax.swing.JRadioButton rdBtnNewLocation;
    private javax.swing.JTextField txtLocationSearch;
    // End of variables declaration//GEN-END:variables
    /**
     * Precarga de datos.
     */
    private void loadProvinceCombo() {
        List.of(
                new Location("A Coruña"), new Location("Lugo"),
                new Location("Ourense"), new Location("Pontevedra")
        ).forEach(cmbProvince::addItem);

    }

    private void loadLocationCombo() {
        Optional.ofNullable((Location) cmbProvince.getSelectedItem())
                .ifPresent((province) -> province.getLocations().forEach(cmbLocation::addItem));
    }

    private void loadActionCommands() {
        rdBtnDeleteLocation.setActionCommand(Location.ACTIONS_DELETE);
        rdBtnModifyLocation.setActionCommand(Location.ACTIONS_UPDATE);
        rdBtnNewLocation.setActionCommand(Location.ACTIONS_INSERT);
    }

    /**
     * Información para el usuario.
     *
     * @param message
     */
    private void errorMessage(String message) {
        JOptionPane.showMessageDialog(rootPane, message, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private void infoMessage(String message) {
        JOptionPane.showMessageDialog(rootPane, message, "Información", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * Gestión y verificación de datos.
     */
    private String manageLocations() throws LocationException {
        Location location = null;
        StringBuilder builder = new StringBuilder("Operación realizada:\n");
        try {

            switch (btnGrpLocations.getSelection().getActionCommand()) {
                case Location.ACTIONS_DELETE -> {
                    location = (Location) cmbLocation.getSelectedItem();
                    cmbLocation.removeItem(location);
                    builder.append("Borrado: ");
                }
                case Location.ACTIONS_INSERT -> {
                    location = new Location(verifyTextField());
                    cmbLocation.addItem(location);
                    builder.append("Insertado: ");
                }
                case Location.ACTIONS_UPDATE -> {
                    location = (Location) cmbLocation.getSelectedItem();
                    location.setName(verifyTextField());
                    builder.append("Actualizado: ");
                }
            }
            builder.append(location).append("\nRealizado con éxito.");
            return builder.toString();
        } catch (LocationException lex) {
            throw new LocationException(lex.getMessage());
        }

    }

    private String verifyTextField() throws LocationException {
        if (txtLocationSearch.getText().isBlank()) {
            throw new LocationException("El campo de texto está vacío.");
        }
        return txtLocationSearch.getText();
    }

}
